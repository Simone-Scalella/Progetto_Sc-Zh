package univpm.esempio.demo;
import univpm.esempio.interf.*;
import java.util.Vector;
import org.springframework.web.client.RestTemplate;
import org.json.JSONArray;
import org.json.JSONObject;

public class FB_page_info implements Download {
	
	private String ID ="";
	private String Impressions = "55";
	private String period = ""; //must be defined
	private String Access_Token = "";
	private Vector<page_post> posts = null;
	String[] metrics_arry = {"page_consumptions","page_consumptions_unique","page_consumptions_by_consumption_type","page_consumptions_by_consumption_type_unique","page_negative_feedback","page_negative_feedback_unique","page_fan_adds_by_paid_non_paid_unique","page_impressions","page_impressions_unique","page_impressions_organic","page_impressions_organic_unique","page_impressions_frequency_distribution","page_posts_served_impressions_organic_unique","page_fans","page_fan_removes"};
	
	//Constructor
	public FB_page_info(String page_ID,String Access_Token,String period) {
		this.ID = page_ID;
		this.Access_Token = Access_Token;
		this.period = period;
		int i = 0;		
		String metrics = String.join(",", metrics_arry);
		int metrics_size = metrics_arry.length; //quantita' di parametri && temporaneo
		//112228053835001 Page ID
		//EAAj9pRhdt7cBADoFODHvJhLjqnMdEZCKaz8ORVjZCUmdL0uubCSjjykBSAc2ZANdVoOO5ilUcW8Hd03NlefWTvQlgPjDeSNcsizn5dvhGaTgPiwLZCXDGOVdkL1CORzryXatEQEc1i38mR9og5ohFSf4iy8dqysyMcRsk3tsDAZDZD
		//String metrics = "page_posts_impressions,page_posts_impressions_unique,page_engaged_users";
		String response =  new RestTemplate().getForObject("https://graph.facebook.com/112228053835001/insights?metric=page_consumptions_by_consumption_type&access_token=EAAj9pRhdt7cBADoFODHvJhLjqnMdEZCKaz8ORVjZCUmdL0uubCSjjykBSAc2ZANdVoOO5ilUcW8Hd03NlefWTvQlgPjDeSNcsizn5dvhGaTgPiwLZCXDGOVdkL1CORzryXatEQEc1i38mR9og5ohFSf4iy8dqysyMcRsk3tsDAZDZD", String.class);
		//JSONObject obj = new JSONObject(response);
		/*
	    JSONArray page_data = GetPage(page_ID,Access_Token,metrics).getJSONArray("data");
         for (Object params:page_data) {
	    	
	    	System.out.println(((((JSONObject)params).getJSONArray("values")).getJSONObject(1)).getJSONObject("value"));
	    	System.out.println(((JSONObject)params).get("name"));
	    	if(i >= 1)i=0;
	    	i++;
	   	
}	*/
	    
	}
	
	
	
		@Override
		public JSONObject GetPage(String ID,String Access_token,String metrics) {
			//TODO definire oggetto erorre e fare try catch
	    	//try(errorboj = respose) ...
			
	    	JSONObject response =  new RestTemplate().getForObject("https://graph.facebook.com/"+ID+"/insights?metric="+metrics+"&access_token="+Access_token+"&period=28_days", JSONObject.class);
	    	System.out.println(response);
	    	return response;
	    }
		@Override
		public JSONObject GetPageUpdate(String ID, String Access_token) {
			// TODO Auto-generated method stub
			return null;
		}
		@Override
		public String GetPageString(String ID, String Access_token) {
			// TODO Auto-generated method stub
			return null;
		}



		public String getID() {
			return ID;
		}



		public void setID(String iD) {
			ID = iD;
		}



		public String getImpressions() {
			return Impressions;
		}



		public void setImpressions(String impressions) {
			Impressions = impressions;
		}



		public String getPeriod() {
			return period;
		}



		public void setPeriod(String period) {
			this.period = period;
		}



		public String getAccess_Token() {
			return Access_Token;
		}



		public void setAccess_Token(String access_Token) {
			Access_Token = access_Token;
		}



		public Vector<page_post> getPosts() {
			return posts;
		}



		public void setPosts(Vector<page_post> posts) {
			this.posts = posts;
		}
		
}
